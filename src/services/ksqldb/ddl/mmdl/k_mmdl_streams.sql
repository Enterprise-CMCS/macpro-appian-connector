SET 'auto.offset.reset' = 'earliest';

CREATE STREAM IF NOT EXISTS K_mmdl_PLAN_BASE_WVR_TBL_stream (
  payload STRUCT <
    PLAN_WVR_ID INTEGER,
    GEO_USPS_STATE_CD VARCHAR,
    PLAN_WVR_GRP_TYPE_CD VARCHAR,
    PLAN_WVR_PGM_TYPE_CD VARCHAR,
    SYS_ADD_TS TIMESTAMP,
    PLAN_WVR_TITLE_TXT VARCHAR,
    PLAN_WVR_APLCTN_ID INTEGER,
    PLAN_WVR_BASE_NUM VARCHAR,
    PLAN_WVR_DEMO_GRNT_SW INTEGER,
    PLAN_WVR_DEMO_GRNT_NAME VARCHAR,
    PLAN_WVR_ORGNL_WVR_BASE_NUM VARCHAR,
    PLAN_WVR_RVSN_DRAFT_BASE_NUM VARCHAR,
    REPLICA_ID INTEGER,
    REPLICA_TIMESTAMP TIMESTAMP>
)
WITH (KAFKA_TOPIC='${param:topicNamespace}aws.mmdl.cdc.PLAN_BASE_WVR_TBL',VALUE_FORMAT='JSON');

CREATE STREAM IF NOT EXISTS K_mmdl_PLAN_WVR_RVSN_TBL_stream (
  payload STRUCT <
    PLAN_WVR_ID INTEGER,
    PLAN_WVR_RVSN_ID INTEGER,
    PLAN_WVR_RVSN_RQST_TYPE_CD VARCHAR,
    PLAN_WVR_RVSN_APRVD_EFCTV_DT TIMESTAMP,
    APLCTN_WRKFLW_STUS_ID INTEGER,
    PLAN_WVR_RVSN_APLCTN_ID VARCHAR,
    SYS_ADD_TS TIMESTAMP,
    PLAN_WVR_TYPE_CD VARCHAR,
    SYS_ADD_USER_ID INTEGER,
    PLAN_WVR_RVSN_TITLE_TXT VARCHAR,
    PLAN_WVR_APLCTN_RVSN_NUM VARCHAR,
    PLAN_WVR_RVSN_PRNT_ID INTEGER,
    APLCTN_WRKFLW_STUS_TS TIMESTAMP,
    SYS_UPDT_TS TIMESTAMP,
    SYS_UPDT_USER_ID INTEGER,
    PLAN_WVR_RVSN_DRAFT_NUM VARCHAR,
    APLCTN_RO_WRKFLW_STUS_ID INTEGER,
    APLCTN_RO_WRKFLW_STUS_TS TIMESTAMP,
    APLCTN_CO_WRKFLW_STUS_ID INTEGER,
    APLCTN_CO_WRKFLW_STUS_TS TIMESTAMP,
    PLAN_WVR_RVSN_CLK_STRT_DT TIMESTAMP,
    PLAN_WVR_RVSN_EXPRTN_DT TIMESTAMP,
    PLAN_WVR_RVSN_APRVD_DT TIMESTAMP,
    PLAN_WVR_RVSN_INIT_WVR_SW INTEGER,
    PLAN_WVR_RVSN_MGRTN_WVR_SW VARCHAR,
    PLAN_WVR_RVSN_RNWL_NUM VARCHAR,
    PLAN_WVR_RVSN_AMNDMT_NUM VARCHAR,
    REPLICA_ID INTEGER,
    REPLICA_TIMESTAMP TIMESTAMP>
)
WITH (KAFKA_TOPIC='${param:topicNamespace}aws.mmdl.cdc.PLAN_WVR_RVSN_TBL',VALUE_FORMAT='JSON');

CREATE STREAM IF NOT EXISTS K_mmdl_PLAN_WVR_RVSN_VRSN_TBL_stream
  (payload struct<
    PLAN_WVR_RVSN_VRSN_ID INT,
    PLAN_WVR_VRSN_TYPE_CD VARCHAR,
    SYS_ADD_TS TIMESTAMP,
    PLAN_WVR_RVSN_TITLE_DESC VARCHAR,
    PLAN_WVR_RVSN_WVR_DESC VARCHAR,
    PLAN_WVR_MODEL_TYPE_CD VARCHAR,
    PLAN_WVR_RVSN_PRPSD_EFCTV_DT TIMESTAMP,
    PLAN_WVR_RVSN_ID INT,
    PLAN_WVR_RVSN_VRSN_NUM VARCHAR,
    PLAN_WVR_RVSN_APRVL_PRD INT,
    REPLICA_ID INT,
    REPLICA_TIMESTAMP TIMESTAMP>
  )
WITH (KAFKA_TOPIC='${param:topicNamespace}aws.mmdl.cdc.PLAN_WVR_RVSN_VRSN_TBL', VALUE_FORMAT='JSON');

CREATE STREAM IF NOT EXISTS K_mmdl_PLAN_WVR_VRSN_DTL_TBL_stream (
  payload STRUCT <
    PLAN_WVR_RVSN_VRSN_ID INTEGER,
    PLAN_WVR_RVSN_VRSN_DTL_ID INTEGER,
    PLAN_WVR_FLD_MPNG_ID INTEGER,
    APLCTN_CHG_TYPE_CD VARCHAR,
    SYS_ADD_TS TIMESTAMP,
    SYS_DTL_VAL_TXT VARCHAR,
    SYS_UPDT_TS TIMESTAMP,
    SYS_UPDT_USER_ID INTEGER,
    REPLICA_ID INTEGER,
    REPLICA_TIMESTAMP TIMESTAMP>
)
WITH (KAFKA_TOPIC='${param:topicNamespace}aws.mmdl.cdc.PLAN_WVR_VRSN_DTL_TBL',VALUE_FORMAT='JSON');

CREATE STREAM IF NOT EXISTS K_mmdl_GEO_US_STATE_TBL_stream (
  payload STRUCT <
    APLCTN_GEO_STATE_ID INTEGER,
    GEO_USPS_STATE_CD VARCHAR,
    GEO_PRNCPAL_SBDIV_NAME VARCHAR,
    REPLICA_ID INTEGER,
    REPLICA_TIMESTAMP TIMESTAMP>
)
WITH (KAFKA_TOPIC='${param:topicNamespace}aws.mmdl.cdc.GEO_US_STATE_TBL',VALUE_FORMAT='JSON');

CREATE STREAM IF NOT EXISTS K_mmdl_PLAN_WVR_FLD_MPNG_TBL_stream (
  payload STRUCT <
    PLAN_WVR_FLD_MPNG_ID INTEGER,
    PLAN_WVR_FLD_MPNG_NAME VARCHAR,
    PLAN_WVR_FLD_MPNG_DESC VARCHAR,
    PLAN_WVR_FLD_MPNG_DTYPE_NAME VARCHAR,
    PLAN_WVR_FLD_MPNG_NOTE_TXT VARCHAR,
    PLAN_WVR_FLD_MPNG_DTL_SW INTEGER,
    SYS_FLD_RFRNC_ID VARCHAR,
    PLAN_WVR_PGM_TYPE_CD VARCHAR,
    PLAN_WVR_FLD_MPNG_PAGE_NUM INTEGER,
    PLAN_WVR_FLD_MPNG_PAGE_SQNC INTEGER,
    PLAN_WVR_FLD_MPNG_CPY_SW INTEGER,
    REPLICA_ID INTEGER,
    REPLICA_TIMESTAMP TIMESTAMP>
)
WITH (KAFKA_TOPIC='${param:topicNamespace}aws.mmdl.cdc.PLAN_WVR_FLD_MPNG_TBL',VALUE_FORMAT='JSON');
